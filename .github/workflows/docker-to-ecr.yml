name: Deploy Flask App to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        echo "Building Docker image..."
        echo "REPO: $ECR_REPOSITORY"
        echo "TAG: $IMAGE_TAG"
        echo "REGISTRY: $REGISTRY"

        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service with new image
      env:
        CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
        SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
        TASK_FAMILY: ${{ secrets.ECS_TASK_DEFINITION }}
        IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
      run: |
        echo "Fetching current task definition for $TASK_FAMILY..."
        TASK_DEF_JSON=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY)

        echo "Creating new task definition revision with updated image: $IMAGE_URI"

        NEW_TASK_DEF=$(echo "$TASK_DEF_JSON" | jq --arg IMAGE "$IMAGE_URI" \
          '.taskDefinition |
            {
              family: .family,
              taskRoleArn: .taskRoleArn,
              executionRoleArn: .executionRoleArn,
              networkMode: .networkMode,
              containerDefinitions: (.containerDefinitions | map(.image = $IMAGE)),
              requiresCompatibilities: .requiresCompatibilities,
              cpu: .cpu,
              memory: .memory,
              volumes: .volumes
            }')

        echo "$NEW_TASK_DEF" > new-task-def.json

        echo "Registering new task definition..."
        aws ecs register-task-definition --cli-input-json file://new-task-def.json

        NEW_REVISION=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY \
          --query 'taskDefinition.revision' --output text)

        echo "Updating service to use revision $NEW_REVISION..."
        aws ecs update-service \
          --cluster $CLUSTER_NAME \
          --service $SERVICE_NAME \
          --task-definition "$TASK_FAMILY:$NEW_REVISION"
